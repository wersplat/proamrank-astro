---
import Navigation from "../../components/Navigation.astro";
import { supa } from "../../lib/supabase";
import "../../styles/global.css";

export const prerender = false;

const { id } = Astro.params;

// Fetch student details
const { data: student } = await supa((Astro.locals as any).runtime)
  .from("college_students")
  .select("*")
  .eq("id", id!)
  .maybeSingle();

if (!student) {
  return Astro.redirect("/students");
}

// If student has a linked player profile, fetch it
let playerProfile = null;
if (student.player_id) {
  const { data: playerData } = await supa((Astro.locals as any).runtime)
    .from("players")
    .select("id, gamertag, position, player_rp, performance_score")
    .eq("id", student.player_id)
    .maybeSingle();
  
  playerProfile = playerData;
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{student.first_name} {student.last_initial}. - Pro-Am Rankings</title>
  </head>
  <body class="bg-neutral-950 text-white">
    <Navigation />
    <main class="mx-auto max-w-4xl p-6">
      <!-- Student Header -->
      <div class="mb-8">
        <div class="flex items-start justify-between gap-4 mb-4">
          <div class="flex-1">
            <h1 class="text-3xl font-bold mb-2">{student.first_name} {student.last_initial}.</h1>
            <p class="text-xl text-neutral-300">{student.gamertag}</p>
          </div>
          <div class="flex flex-col gap-2">
            {student.gpa && (
              <div class="px-4 py-2 rounded-lg bg-green-900/30 text-green-300 border border-green-800/50 text-center">
                <div class="text-2xl font-bold">{student.gpa}</div>
                <div class="text-xs text-neutral-400">GPA</div>
              </div>
            )}
            {(student.graduation_year || student.is_transfer) && (
              <div class="px-4 py-2 rounded-lg bg-blue-900/30 text-blue-300 border border-blue-800/50 text-center">
                <div class="text-sm font-bold">
                  {student.is_transfer ? "Transfer" : `Class of ${student.graduation_year}`}
                </div>
                <div class="text-xs text-neutral-400">
                  {student.is_transfer ? "Student" : "HS Grad"}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="space-y-6">
        <!-- Academic Information -->
        <div class="rounded-lg border border-neutral-800 p-6">
          <h2 class="text-xl font-bold mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
            Academic Profile
          </h2>

          <div class="grid gap-4 md:grid-cols-2">
            <div>
              <h3 class="text-sm font-semibold text-neutral-400 mb-1">Status</h3>
              <p class="text-base">
                {student.is_transfer 
                  ? "Looking to transfer" 
                  : student.graduation_year 
                    ? `High School Senior - Class of ${student.graduation_year}`
                    : "Seeking collegiate opportunities"}
              </p>
            </div>

            {student.gpa && (
              <div>
                <h3 class="text-sm font-semibold text-neutral-400 mb-1">GPA</h3>
                <p class="text-base font-bold text-green-400">{student.gpa} / 4.0</p>
              </div>
            )}

            {student.majors_desired && Array.isArray(student.majors_desired) && student.majors_desired.length > 0 && (
              <div class="md:col-span-2">
                <h3 class="text-sm font-semibold text-neutral-400 mb-2">Desired Majors</h3>
                <div class="flex flex-wrap gap-2">
                  {student.majors_desired.map((major: string) => (
                    <span class="px-3 py-1 rounded-full bg-blue-900/30 text-blue-300 text-sm border border-blue-800/50">
                      {major}
                    </span>
                  ))}
                </div>
              </div>
            )}

            <div class="md:col-span-2">
              <h3 class="text-sm font-semibold text-neutral-400 mb-1">Geographic Flexibility</h3>
              <p class="text-base">
                {student.willing_to_travel_out_of_state 
                  ? "âœ“ Willing to attend college out of state" 
                  : "Prefers to stay in-state"}
              </p>
            </div>
          </div>
        </div>

        <!-- Competitive Profile -->
        <div class="rounded-lg border border-neutral-800 p-6">
          <h2 class="text-xl font-bold mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
            </svg>
            Competitive Profile
          </h2>

          {playerProfile && (
            <div class="mb-6 p-4 rounded-lg bg-purple-900/20 border border-purple-800/50">
              <div class="flex items-center justify-between mb-2">
                <p class="text-sm text-neutral-300">This student has a linked competitive profile</p>
                <a 
                  href={`/players/${playerProfile.id}`}
                  class="px-4 py-2 rounded bg-purple-600 hover:bg-purple-700 transition text-sm font-medium inline-flex items-center gap-2"
                >
                  View Stats
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                  </svg>
                </a>
              </div>
              <div class="flex gap-4 text-sm">
                <div>
                  <span class="text-neutral-400">Position:</span>
                  <span class="ml-2 font-semibold">{playerProfile.position || 'Unknown'}</span>
                </div>
                {playerProfile.player_rp && (
                  <div>
                    <span class="text-neutral-400">RP:</span>
                    <span class="ml-2 font-semibold text-blue-400">{playerProfile.player_rp}</span>
                  </div>
                )}
              </div>
            </div>
          )}

          {student.competitive_accomplishments ? (
            <div class="mb-6">
              <h3 class="text-sm font-semibold text-neutral-400 mb-2">Accomplishments</h3>
              <p class="text-base leading-relaxed whitespace-pre-line">{student.competitive_accomplishments}</p>
            </div>
          ) : (
            <p class="text-neutral-400 text-sm mb-6">No accomplishments listed yet</p>
          )}

          {student.goals_with_competing && (
            <div>
              <h3 class="text-sm font-semibold text-neutral-400 mb-2">Goals with Competing</h3>
              <p class="text-base leading-relaxed whitespace-pre-line">{student.goals_with_competing}</p>
            </div>
          )}
        </div>

        <!-- Film/Highlights -->
        {student.film_links && Array.isArray(student.film_links) && student.film_links.length > 0 && (
          <div class="rounded-lg border border-neutral-800 p-6">
            <h2 class="text-xl font-bold mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Film & Highlights
            </h2>

            <div class="space-y-3">
              {student.film_links.map((link: string, index: number) => {
                // Check if it's a YouTube or Twitch link for display
                const isYouTube = link.includes('youtube.com') || link.includes('youtu.be');
                const isTwitch = link.includes('twitch.tv');
                
                return (
                  <a 
                    href={link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center gap-3 p-3 rounded-lg border border-neutral-700 hover:border-blue-500 transition group"
                  >
                    {isYouTube ? (
                      <svg class="w-6 h-6 text-red-500 flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
                      </svg>
                    ) : isTwitch ? (
                      <svg class="w-6 h-6 text-purple-500 flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M11.571 4.714h1.715v5.143H11.57zm4.715 0H18v5.143h-1.714zM6 0L1.714 4.286v15.428h5.143V24l4.286-4.286h3.428L22.286 12V0zm14.571 11.143l-3.428 3.428h-3.429l-3 3v-3H6.857V1.714h13.714Z"/>
                      </svg>
                    ) : (
                      <svg class="w-6 h-6 text-neutral-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    )}
                    <div class="flex-1 min-w-0">
                      <p class="text-sm font-medium truncate group-hover:text-blue-400 transition">
                        {isYouTube ? 'YouTube Video' : isTwitch ? 'Twitch Clip/VOD' : `Highlight ${index + 1}`}
                      </p>
                      <p class="text-xs text-neutral-500 truncate">{link}</p>
                    </div>
                    <svg class="w-5 h-5 text-neutral-400 group-hover:text-blue-400 transition flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </a>
                );
              })}
            </div>
          </div>
        )}

        <!-- Contact/Interest Section -->
        <div class="rounded-lg border border-blue-800 bg-blue-900/20 p-6">
          <h2 class="text-lg font-bold mb-2">Interested in Recruiting?</h2>
          <p class="text-sm text-neutral-300 mb-4">
            {student.first_name} is actively seeking collegiate esports opportunities. 
            Contact them through their provided information to discuss recruitment.
          </p>
          <div class="flex gap-3">
            <button 
              class="px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 transition text-sm font-medium"
              onclick="alert('Contact feature coming soon! For now, reach out through the platform.')"
            >
              Express Interest
            </button>
          </div>
        </div>
      </div>

      <!-- Back Link -->
      <div class="mt-8">
        <a 
          href="/students"
          class="inline-flex items-center gap-2 text-neutral-400 hover:text-white transition"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          Back to Students
        </a>
      </div>
    </main>
  </body>
</html>

