---
// Server-side error test - Uncomment to test SSR error
// throw new Error("[Sentry Test] Server-side SSR error from Astro page");

const pageTitle = "Sentry Error Testing";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{pageTitle}</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-100 min-h-screen p-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-3xl font-bold mb-6 text-gray-800">üîç Sentry Error Testing</h1>
      
      <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4 text-gray-700">Instructions</h2>
        <p class="text-gray-600 mb-4">
          Click the buttons below to trigger test errors in different parts of the application.
          After triggering an error, check your Sentry dashboard to verify it was captured.
        </p>
        <a 
          href="https://bodegacatsgc.sentry.io/issues/" 
          target="_blank"
          class="inline-block bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition"
        >
          Open Sentry Dashboard ‚Üí
        </a>
      </div>

      <div class="grid gap-4 md:grid-cols-2">
        <!-- Client-side JavaScript Error -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold mb-3 text-red-600">1. Client-Side Error</h3>
          <p class="text-gray-600 mb-4 text-sm">
            Triggers a JavaScript error in the browser. Should appear in Sentry with browser context.
          </p>
          <button
            id="clientError"
            class="w-full bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition"
          >
            Throw Client Error
          </button>
        </div>

        <!-- Async Client Error -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold mb-3 text-orange-600">2. Async Client Error</h3>
          <p class="text-gray-600 mb-4 text-sm">
            Triggers an async error (Promise rejection). Tests async error handling.
          </p>
          <button
            id="asyncError"
            class="w-full bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600 transition"
          >
            Throw Async Error
          </button>
        </div>

        <!-- Fetch Error -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold mb-3 text-yellow-600">3. API Fetch Error</h3>
          <p class="text-gray-600 mb-4 text-sm">
            Calls a non-existent API endpoint. Tests network error capture.
          </p>
          <button
            id="fetchError"
            class="w-full bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition"
          >
            Trigger Fetch Error
          </button>
        </div>

        <!-- Console Error -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold mb-3 text-green-600">4. Manual Capture</h3>
          <p class="text-gray-600 mb-4 text-sm">
            Manually captures a message to Sentry using captureMessage.
          </p>
          <button
            id="manualCapture"
            class="w-full bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition"
          >
            Send Manual Message
          </button>
        </div>
      </div>

      <div class="bg-blue-50 border-l-4 border-blue-500 p-6 mt-6">
        <h3 class="text-lg font-semibold mb-2 text-blue-800">Server-Side Error Test</h3>
        <p class="text-blue-700 mb-4">
          To test server-side errors, uncomment line 2 in <code class="bg-blue-100 px-2 py-1 rounded">src/pages/sentry-test.astro</code> and refresh this page.
        </p>
        <p class="text-blue-700 text-sm">
          The error will be caught during server-side rendering and sent to Sentry.
        </p>
      </div>

      <div class="mt-6 text-center">
        <a href="/" class="text-blue-600 hover:underline">‚Üê Back to Home</a>
      </div>
    </div>

    <script>
      // Import Sentry for manual captures
      import * as Sentry from '@sentry/astro';

      // Client-side error
      document.getElementById('clientError')?.addEventListener('click', () => {
        throw new Error('[Sentry Test] Client-side JavaScript error from button click');
      });

      // Async error
      document.getElementById('asyncError')?.addEventListener('click', async () => {
        await new Promise((_, reject) => {
          setTimeout(() => {
            reject(new Error('[Sentry Test] Async Promise rejection error'));
          }, 100);
        });
      });

      // Fetch error
      document.getElementById('fetchError')?.addEventListener('click', async () => {
        try {
          const response = await fetch('/api/non-existent-endpoint-for-testing');
          if (!response.ok) {
            throw new Error('[Sentry Test] API endpoint returned ' + response.status);
          }
        } catch (error) {
          Sentry.captureException(error);
          throw error;
        }
      });

      // Manual capture
      document.getElementById('manualCapture')?.addEventListener('click', () => {
        Sentry.captureMessage('[Sentry Test] Manual test message from ProAm Rankings', {
          level: 'info',
          tags: {
            test: 'manual-capture',
            source: 'sentry-test-page'
          },
          extra: {
            timestamp: new Date().toISOString(),
            userAgent: navigator.userAgent
          }
        });
        alert('‚úÖ Message sent to Sentry! Check your dashboard.');
      });

      // Add visual feedback for errors
      window.addEventListener('error', (event) => {
        console.log('Error captured by Sentry:', event.error.message);
      });

      window.addEventListener('unhandledrejection', (event) => {
        console.log('Promise rejection captured by Sentry:', event.reason.message);
      });
    </script>
  </body>
</html>

